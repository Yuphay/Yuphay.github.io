{"version":3,"sources":["webpack:///webpack/runtime/startup chunk dependencies","webpack:///./src/workers/colliderSupersamplingWorker.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/get mini-css chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/importScripts chunk loading","webpack:///webpack/startup"],"names":["next","self","onmessage","e","id","data","console","log","unitCubeNumber","xyPositions","numberDepth","unitCubeSideLength","numberFont","numberText","standardNumberSize","numberMeshScale","currentPos","numberDepthScalingFactor","THREE","load","font","currentGeometry","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","center","currentMesh","color","position","set","x","y","z","matrixScaling","makeScale","geometry","applyMatrix4","collisionRayCaster0","collisionRayCaster1","xyCollisions","layers","enable","material","side","updateMatrixWorld","far","j","push","i","collisionRayIntersects0","intersectObject","collisionRayIntersects1","collisionCount","length","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","chunkId","Promise","all","keys","reduce","promises","u","miniCssF","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","then","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","Error","replace","p","installedChunks","840","chunkLoadingGlobal","parentChunkLoadingFunction","bind","chunkIds","moreModules","runtime","pop"],"mappings":"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","file":"bundle.d8ba3cb713a55c30aaa0.js","sourcesContent":["var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(9).then(next);\n};","import * as THREE from 'three';\r\n\r\nself.onmessage = function (e) {\r\n\r\n    let id = e.data.id;\r\n\r\n    console.log(\"Thread \" + id + \" started\");\r\n\r\n    let unitCubeNumber = e.data.unitCubeNumber;\r\n    let xyPositions = e.data.xyPositions;\r\n    let numberDepth = e.data.numberDepth;\r\n    let unitCubeSideLength = e.data.unitCubeSideLength;\r\n    let numberFont = e.data.numberFont;\r\n    let numberText = e.data.numberText;\r\n    let standardNumberSize = e.data.standardNumberSize;\r\n    let numberMeshScale = e.data.numberMeshScale;\r\n    let numberDepthScalingFactor = e.data.numberDepthScalingFactor;\r\n    let currentPos = e.data.currentPos;\r\n\r\n    let fontLoader = new THREE.FontLoader();\r\n    fontLoader.load(numberFont, function (font) {\r\n        let currentGeometry = new THREE.TextGeometry(numberText, {\r\n            font: font,\r\n            size: standardNumberSize,\r\n            height: 1,\r\n            curveSegments: 64,\r\n            bevelEnabled: false,\r\n            bevelThickness: 0.1,\r\n            bevelSize: 0.1,\r\n            bevelOffset: 0,\r\n            bevelSegments: 5\r\n        });\r\n\r\n        currentGeometry.center();\r\n        let currentMesh = new THREE.Mesh(currentGeometry, new THREE.MeshBasicMaterial({ color: 0xFFFFFF }));\r\n        currentMesh.position.set(currentPos.x, currentPos.y, currentPos.z);\r\n\r\n        let matrixScaling = new THREE.Matrix4();\r\n        matrixScaling.makeScale(numberMeshScale, numberMeshScale, numberDepth);\r\n        currentMesh.geometry.applyMatrix4(matrixScaling);\r\n\r\n        let collisionRayCaster0 = new THREE.Raycaster();\r\n        let collisionRayCaster1 = new THREE.Raycaster();\r\n        let xyCollisions = [];\r\n\r\n        collisionRayCaster0.layers.set(1);\r\n        collisionRayCaster1.layers.set(1);\r\n        currentMesh.layers.enable(1);\r\n        currentMesh.material.side = THREE.DoubleSide;\r\n        currentMesh.updateMatrixWorld();\r\n        collisionRayCaster0.far = numberDepth;\r\n        collisionRayCaster1.far = numberDepth;\r\n\r\n        for (let j = 0; j < unitCubeNumber; j++) {\r\n            xyCollisions.push([]);\r\n            for (let i = 0; i < unitCubeNumber; i++) {\r\n                if (id === 0) {\r\n                    collisionRayCaster0.set(new THREE.Vector3(\r\n                        xyPositions[j][i].x - unitCubeSideLength * 3 / 8,\r\n                        xyPositions[j][i].y + unitCubeSideLength * 3 / 8,\r\n                        xyPositions[j][i].z),\r\n                        new THREE.Vector3(0, 0, 1));\r\n\r\n                    collisionRayCaster1.set(new THREE.Vector3(\r\n                        xyPositions[j][i].x - unitCubeSideLength * 1 / 8,\r\n                        xyPositions[j][i].y + unitCubeSideLength * 1 / 8,\r\n                        xyPositions[j][i].z),\r\n                        new THREE.Vector3(0, 0, 1));\r\n                }\r\n                else if (id === 1) {\r\n                    collisionRayCaster0.set(new THREE.Vector3(\r\n                        xyPositions[j][i].x + unitCubeSideLength * 1 / 8,\r\n                        xyPositions[j][i].y + unitCubeSideLength * 3 / 8,\r\n                        xyPositions[j][i].z),\r\n                        new THREE.Vector3(0, 0, 1));\r\n\r\n                    collisionRayCaster1.set(new THREE.Vector3(\r\n                        xyPositions[j][i].x + unitCubeSideLength * 3 / 8,\r\n                        xyPositions[j][i].y + unitCubeSideLength * 1 / 8,\r\n                        xyPositions[j][i].z),\r\n                        new THREE.Vector3(0, 0, 1));\r\n                }\r\n                else if (id === 2) {\r\n                    collisionRayCaster0.set(new THREE.Vector3(\r\n                        xyPositions[j][i].x - unitCubeSideLength * 3 / 8,\r\n                        xyPositions[j][i].y - unitCubeSideLength * 1 / 8,\r\n                        xyPositions[j][i].z),\r\n                        new THREE.Vector3(0, 0, 1));\r\n\r\n                    collisionRayCaster1.set(new THREE.Vector3(\r\n                        xyPositions[j][i].x - unitCubeSideLength * 1 / 8,\r\n                        xyPositions[j][i].y - unitCubeSideLength * 3 / 8,\r\n                        xyPositions[j][i].z),\r\n                        new THREE.Vector3(0, 0, 1));\r\n                }\r\n                else if (id === 3) {\r\n                    collisionRayCaster0.set(new THREE.Vector3(\r\n                        xyPositions[j][i].x + unitCubeSideLength * 1 / 8,\r\n                        xyPositions[j][i].y - unitCubeSideLength * 1 / 8,\r\n                        xyPositions[j][i].z),\r\n                        new THREE.Vector3(0, 0, 1));\r\n\r\n                    collisionRayCaster1.set(new THREE.Vector3(\r\n                        xyPositions[j][i].x + unitCubeSideLength * 3 / 8,\r\n                        xyPositions[j][i].y - unitCubeSideLength * 3 / 8,\r\n                        xyPositions[j][i].z),\r\n                        new THREE.Vector3(0, 0, 1));\r\n                }\r\n\r\n                const collisionRayIntersects0 = collisionRayCaster0.intersectObject(currentMesh);\r\n                const collisionRayIntersects1 = collisionRayCaster1.intersectObject(currentMesh);\r\n\r\n                let collisionCount = 0;\r\n                if (collisionRayIntersects0.length > 0) {\r\n                    collisionCount++;\r\n                }\r\n                if (collisionRayIntersects1.length > 0) {\r\n                    collisionCount++;\r\n                }\r\n                \r\n                xyCollisions[j].push(collisionCount);\r\n            }\r\n        }\r\n\r\n        self.postMessage({ id: id, xyCollisions: xyCollisions });\r\n        console.log(\"Thread \" + id + \" done\");\r\n    });\r\n}\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\tvar __webpack_exports__ = __webpack_require__(840);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + \"fe0b8cb3bb24d57fc8e9\" + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t840: 1\n};\n\n// importScripts chunk loading\nvar chunkLoadingCallback = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\timportScripts(\"\" + __webpack_require__.u(chunkId));\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = chunkLoadingCallback;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"sourceRoot":""}